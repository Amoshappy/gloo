// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/gloo/projects/gloo/api/v1/plugins/hcm/hcm.proto

package hcm

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type HCMSettings struct {
	SkipXffAppend        bool             `protobuf:"varint,1,opt,name=skip_xff_append,json=skipXffAppend,proto3" json:"skip_xff_append,omitempty"`
	Via                  string           `protobuf:"bytes,2,opt,name=via,proto3" json:"via,omitempty"`
	XffNumTrustedHops    uint32           `protobuf:"varint,3,opt,name=xff_num_trusted_hops,json=xffNumTrustedHops,proto3" json:"xff_num_trusted_hops,omitempty"`
	UseRemoteAddress     *types.BoolValue `protobuf:"bytes,4,opt,name=use_remote_address,json=useRemoteAddress,proto3" json:"use_remote_address,omitempty"`
	GenerateRequestId    *types.BoolValue `protobuf:"bytes,5,opt,name=generate_request_id,json=generateRequestId,proto3" json:"generate_request_id,omitempty"`
	Proxy_100Continue    bool             `protobuf:"varint,6,opt,name=proxy_100_continue,json=proxy100Continue,proto3" json:"proxy_100_continue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HCMSettings) Reset()         { *m = HCMSettings{} }
func (m *HCMSettings) String() string { return proto.CompactTextString(m) }
func (*HCMSettings) ProtoMessage()    {}
func (*HCMSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c9393403d6dbb8c, []int{0}
}
func (m *HCMSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HCMSettings.Unmarshal(m, b)
}
func (m *HCMSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HCMSettings.Marshal(b, m, deterministic)
}
func (m *HCMSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HCMSettings.Merge(m, src)
}
func (m *HCMSettings) XXX_Size() int {
	return xxx_messageInfo_HCMSettings.Size(m)
}
func (m *HCMSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_HCMSettings.DiscardUnknown(m)
}

var xxx_messageInfo_HCMSettings proto.InternalMessageInfo

func (m *HCMSettings) GetSkipXffAppend() bool {
	if m != nil {
		return m.SkipXffAppend
	}
	return false
}

func (m *HCMSettings) GetVia() string {
	if m != nil {
		return m.Via
	}
	return ""
}

func (m *HCMSettings) GetXffNumTrustedHops() uint32 {
	if m != nil {
		return m.XffNumTrustedHops
	}
	return 0
}

func (m *HCMSettings) GetUseRemoteAddress() *types.BoolValue {
	if m != nil {
		return m.UseRemoteAddress
	}
	return nil
}

func (m *HCMSettings) GetGenerateRequestId() *types.BoolValue {
	if m != nil {
		return m.GenerateRequestId
	}
	return nil
}

func (m *HCMSettings) GetProxy_100Continue() bool {
	if m != nil {
		return m.Proxy_100Continue
	}
	return false
}

func init() {
	proto.RegisterType((*HCMSettings)(nil), "hcm.plugins.gloo.solo.io.HCMSettings")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo/projects/gloo/api/v1/plugins/hcm/hcm.proto", fileDescriptor_1c9393403d6dbb8c)
}

var fileDescriptor_1c9393403d6dbb8c = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xbb, 0xce, 0xd3, 0x30,
	0x14, 0x56, 0xfe, 0x42, 0x05, 0xae, 0x2a, 0x5a, 0xd3, 0x21, 0xea, 0x50, 0x45, 0x0c, 0x28, 0x03,
	0xd8, 0x29, 0xac, 0x2c, 0x4d, 0x97, 0x82, 0x04, 0x43, 0x40, 0x08, 0xb1, 0x58, 0x69, 0xe2, 0xb8,
	0xa6, 0x49, 0x8e, 0xf1, 0xa5, 0x94, 0x37, 0xe2, 0x21, 0x78, 0x1a, 0x9e, 0x04, 0xd9, 0xa6, 0x1b,
	0x12, 0x0c, 0x96, 0xce, 0xf9, 0x6e, 0xfa, 0xe4, 0x83, 0x4a, 0x21, 0xed, 0xc9, 0x1d, 0x49, 0x03,
	0x03, 0x35, 0xd0, 0xc3, 0x73, 0x09, 0x54, 0xf4, 0x00, 0x54, 0x69, 0xf8, 0xc2, 0x1b, 0x6b, 0xe2,
	0x56, 0x2b, 0x49, 0x2f, 0x5b, 0xaa, 0x7a, 0x27, 0xe4, 0x68, 0xe8, 0xa9, 0x19, 0xfc, 0x23, 0x4a,
	0x83, 0x05, 0x9c, 0x86, 0x31, 0x52, 0xc4, 0xcb, 0x89, 0x4f, 0x22, 0x12, 0xd6, 0x2b, 0x01, 0x02,
	0x82, 0x88, 0xfa, 0x29, 0xea, 0xd7, 0x1b, 0x01, 0x20, 0x7a, 0x4e, 0xc3, 0x76, 0x74, 0x1d, 0xfd,
	0xa6, 0x6b, 0xa5, 0xb8, 0x36, 0x91, 0x7f, 0xf2, 0xf3, 0x0e, 0xcd, 0x0e, 0xfb, 0xb7, 0xef, 0xb9,
	0xb5, 0x72, 0x14, 0x06, 0x3f, 0x45, 0x8f, 0xcc, 0x59, 0x2a, 0x76, 0xed, 0x3a, 0xe6, 0x85, 0x63,
	0x9b, 0x26, 0x59, 0x92, 0x3f, 0xa8, 0xe6, 0x1e, 0xfe, 0xd4, 0x75, 0xbb, 0x00, 0xe2, 0x05, 0x9a,
	0x5c, 0x64, 0x9d, 0xde, 0x65, 0x49, 0xfe, 0xb0, 0xf2, 0x23, 0xa6, 0x68, 0xe5, 0x4d, 0xa3, 0x1b,
	0x98, 0xd5, 0xce, 0x58, 0xde, 0xb2, 0x13, 0x28, 0x93, 0x4e, 0xb2, 0x24, 0x9f, 0x57, 0xcb, 0x6b,
	0xd7, 0xbd, 0x73, 0xc3, 0x87, 0xc8, 0x1c, 0x40, 0x19, 0x7c, 0x40, 0xd8, 0x19, 0xce, 0x34, 0x1f,
	0xc0, 0x72, 0x56, 0xb7, 0xad, 0xe6, 0xc6, 0xa4, 0xf7, 0xb2, 0x24, 0x9f, 0xbd, 0x58, 0x93, 0xd8,
	0x9b, 0xdc, 0x7a, 0x93, 0x12, 0xa0, 0xff, 0x58, 0xf7, 0x8e, 0x57, 0x0b, 0x67, 0x78, 0x15, 0x4c,
	0xbb, 0xe8, 0xc1, 0x6f, 0xd0, 0x63, 0xc1, 0x47, 0xae, 0x6b, 0xeb, 0xe3, 0xbe, 0x3a, 0x6e, 0x2c,
	0x93, 0x6d, 0x7a, 0xff, 0x9f, 0x51, 0xcb, 0x9b, 0xad, 0x8a, 0xae, 0xd7, 0x2d, 0x7e, 0x86, 0xb0,
	0xd2, 0x70, 0xfd, 0xce, 0xb6, 0x45, 0xc1, 0x1a, 0x18, 0xad, 0x1c, 0x1d, 0x4f, 0xa7, 0xe1, 0x0f,
	0x16, 0x81, 0xd9, 0x16, 0xc5, 0xfe, 0x0f, 0x5e, 0x96, 0x3f, 0x7e, 0x6d, 0x92, 0xcf, 0xaf, 0xfe,
	0xef, 0xb0, 0xea, 0x2c, 0xfe, 0x72, 0xdc, 0xe3, 0x34, 0x14, 0x7b, 0xf9, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0xe2, 0xdd, 0xee, 0xe7, 0x1f, 0x02, 0x00, 0x00,
}

func (this *HCMSettings) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*HCMSettings)
	if !ok {
		that2, ok := that.(HCMSettings)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.SkipXffAppend != that1.SkipXffAppend {
		return false
	}
	if this.Via != that1.Via {
		return false
	}
	if this.XffNumTrustedHops != that1.XffNumTrustedHops {
		return false
	}
	if !this.UseRemoteAddress.Equal(that1.UseRemoteAddress) {
		return false
	}
	if !this.GenerateRequestId.Equal(that1.GenerateRequestId) {
		return false
	}
	if this.Proxy_100Continue != that1.Proxy_100Continue {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
